// Generated by BUCKLESCRIPT VERSION 2.2.0, PLEASE EDIT WITH CARE
'use strict';

var Home = require("./pages/home.bs.js");
var Link = require("./utils/link.bs.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Repos = require("./pages/repos.bs.js");
var Utils = require("./utils/utils.bs.js");
var React = require("react");
var Future = require("./pages/future.bs.js");
var Restyled = require("./restyled.bs.js");
var Styletron = require("@astrada/bs-styletron-react/lib/js/src/Styletron.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");

function reducer(action, _) {
  return /* Update */Block.__(0, [/* record */[/* route */action[0]]]);
}

function mapUrlToRoute(url) {
  var match = url[/* path */0];
  if (match) {
    switch (match[0]) {
      case "future" : 
          if (match[1]) {
            return /* Home */0;
          } else {
            return /* Future */3;
          }
      case "repos" : 
          if (match[1]) {
            return /* Home */0;
          } else {
            return /* Repos */1;
          }
      case "restyled" : 
          if (match[1]) {
            return /* Home */0;
          } else {
            return /* Restyled */2;
          }
      default:
        return /* Home */0;
    }
  } else {
    return /* Home */0;
  }
}

var component = ReasonReact.reducerComponent("Router");

function make() {
  var newrecord = component.slice();
  newrecord[/* render */9] = (function (self) {
      var match = self[/* state */2][/* route */0];
      var tmp;
      switch (match) {
        case 0 : 
            tmp = ReasonReact.element(/* None */0, /* None */0, Home.make(/* array */[]));
            break;
        case 1 : 
            tmp = ReasonReact.element(/* None */0, /* None */0, Repos.make(/* array */[]));
            break;
        case 2 : 
            tmp = ReasonReact.element(/* None */0, /* None */0, Restyled.make(/* array */[]));
            break;
        case 3 : 
            tmp = ReasonReact.element(/* None */0, /* None */0, Future.make(/* array */[]));
            break;
        
      }
      return ReasonReact.element(/* None */0, /* None */0, Curry._2(Styletron.React[/* Provider */3][/* make */0], /* None */0, /* array */[React.createElement("div", undefined, React.createElement("ul", {
                                className: "nav"
                              }, React.createElement("li", undefined, ReasonReact.element(/* None */0, /* None */0, Link.make("home", /* array */[Utils.str("Home")]))), React.createElement("li", undefined, ReasonReact.element(/* None */0, /* None */0, Link.make("repos", /* array */[Utils.str("Repos")]))), React.createElement("li", undefined, ReasonReact.element(/* None */0, /* None */0, Link.make("future", /* array */[Utils.str("Future")]))), React.createElement("li", undefined, ReasonReact.element(/* None */0, /* None */0, Link.make("restyled", /* array */[Utils.str("Restyled")])))), React.createElement("div", {
                                className: "main"
                              }, tmp))]));
    });
  newrecord[/* initialState */10] = (function () {
      return /* record */[/* route */mapUrlToRoute(ReasonReact.Router[/* dangerouslyGetInitialUrl */3](/* () */0))];
    });
  newrecord[/* reducer */12] = reducer;
  newrecord[/* subscriptions */13] = (function (self) {
      return /* :: */[
              /* Sub */[
                (function () {
                    return ReasonReact.Router[/* watchUrl */1]((function (url) {
                                  return Curry._1(self[/* send */4], /* ChangeRoute */[mapUrlToRoute(url)]);
                                }));
                  }),
                ReasonReact.Router[/* unwatchUrl */2]
              ],
              /* [] */0
            ];
    });
  return newrecord;
}

exports.reducer = reducer;
exports.mapUrlToRoute = mapUrlToRoute;
exports.component = component;
exports.make = make;
/* component Not a pure module */
