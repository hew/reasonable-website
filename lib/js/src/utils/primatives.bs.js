// Generated by BUCKLESCRIPT VERSION 2.2.0, PLEASE EDIT WITH CARE
'use strict';

var Theme = require("./theme.bs.js");
var React = require("react");
var Styletron = require("@astrada/bs-styletron-react/lib/js/src/Styletron.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var Css$BsCssCore = require("bs-css-core/lib/js/src/Css.js");

var component = ReasonReact.statelessComponent("Component");

function make(className, children) {
  var newrecord = component.slice();
  newrecord[/* render */9] = (function () {
      return React.createElement("div", {
                  className: className
                }, children);
    });
  return newrecord;
}

var Component = /* module */[
  /* component */component,
  /* make */make
];

function makeStyledComponent(s, children) {
  return Styletron.React[/* makeStyledComponent */2]((function () {
                return Css$BsCssCore.style(s);
              }), component, make, children);
}

function makeStyled(styl, children) {
  return Styletron.React[/* makeStyled */1](/* `String */[
              -976970511,
              "div"
            ], (function () {
                return Css$BsCssCore.style(styl);
              }), { }, children);
}

var make$1 = makeStyledComponent;

var Space = /* module */[/* make */make$1];

function make$2(children) {
  return makeStyled(/* :: */[
              Theme.pageWidth,
              /* [] */0
            ], children);
}

var Wrapper = /* module */[/* make */make$2];

function make$3(children) {
  return makeStyled(/* :: */[
              Css$BsCssCore.fontSize(Css$BsCssCore.em(2)),
              /* [] */0
            ], children);
}

var Heading = /* module */[/* make */make$3];

function make$4($staropt$star, $staropt$star$1, children) {
  var color_ = $staropt$star ? $staropt$star[0] : Css$BsCssCore.white;
  var bg = $staropt$star$1 ? $staropt$star$1[0] : Theme.Color[/* primary */0];
  return makeStyled(/* :: */[
              Css$BsCssCore.display(/* InlineBlock */11),
              /* :: */[
                Css$BsCssCore.backgroundColor(Theme.Color[/* primary */0]),
                /* :: */[
                  Css$BsCssCore.color(color_),
                  /* :: */[
                    Css$BsCssCore.backgroundColor(bg),
                    /* :: */[
                      Theme.p(1),
                      /* [] */0
                    ]
                  ]
                ]
              ]
            ], children);
}

var Highlight = /* module */[/* make */make$4];

exports.Component = Component;
exports.makeStyledComponent = makeStyledComponent;
exports.makeStyled = makeStyled;
exports.Space = Space;
exports.Wrapper = Wrapper;
exports.Heading = Heading;
exports.Highlight = Highlight;
/* component Not a pure module */
